seed: 42

models:
  separate: False
  policy:
    class: GaussianMixin
    clip_actions: True              # 启用动作裁剪
    clip_log_std: True
    min_log_std: -3.0              # 更保守的最小log_std，避免过小的std
    max_log_std: -0.5              # 更保守的最大log_std，避免过大的std
    initial_log_std: -2.0          # 保守的初始log_std
    network:
      - name: net
        input: STATES
        layers: [128, 64, 32]       # 适中的网络规模
        activations: elu
        initializer: orthogonal     # 使用正交初始化
        initializer_kwargs:
          gain: 0.5                 # 较小的初始化增益
    output: ACTIONS
  value:
    class: DeterministicMixin
    clip_actions: False
    network:
      - name: net
        input: STATES
        layers: [128, 64, 32]       # 与policy网络保持一致
        activations: elu
        initializer: orthogonal     # 使用正交初始化
        initializer_kwargs:
          gain: 1.0                 # value网络可以用稍大的增益
    output: ONE

memory:
  class: RandomMemory
  memory_size: -1

agent:
  class: PPO
  rollouts: 24
  learning_epochs: 4              # 适中的学习轮数
  mini_batches: 6                 # 适中的mini_batches数量
  discount_factor: 0.99
  lambda: 0.95
  learning_rate: 3.0e-5           # 适中的学习率
  learning_rate_scheduler: KLAdaptiveLR
  learning_rate_scheduler_kwargs:
    kl_threshold: 0.008           # 更严格的KL阈值
    min_lr: 1.0e-6               # 设置最小学习率
    max_lr: 1.0e-3               # 设置最大学习率
  state_preprocessor: RunningStandardScaler
  # state_preprocessor_kwargs:
  #   clip_observations: 10.0       # 添加观测值裁剪
  value_preprocessor: RunningStandardScaler
  # value_preprocessor_kwargs:
  #   clip_observations: 10.0       # 添加value裁剪
  random_timesteps: 0
  learning_starts: 0
  grad_norm_clip: 0.5             # 适中的梯度裁剪
  ratio_clip: 0.2                 # 标准的PPO比率裁剪
  value_clip: 0.2                 # 适中的value裁剪
  clip_predicted_values: True
  entropy_loss_scale: 0.005       # 降低熵损失权重
  value_loss_scale: 0.5           # 适中的value损失权重
  kl_threshold: 0.008             # 与学习率调度器保持一致
  rewards_shaper_scale: 0.1       # 大幅缩放奖励
  time_limit_bootstrap: False
  experiment:
    directory: "dual_airbot"
    experiment_name: ""
    write_interval: 100           # 降低写入频率
    checkpoint_interval: 200      # 降低检查点保存频率

trainer:
  class: SequentialTrainer
  timesteps: 36000
  environment_info: log